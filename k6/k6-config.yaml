apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-script
  namespace: ray
data:
  smoke.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export const options = {
      scenarios: {
        ramp: {
          executor: 'ramping-arrival-rate',
          startRate: 1,
          timeUnit: '1s',
          preAllocatedVUs: 20,
          maxVUs: 200,
          stages: [
            { duration: '2m', target: 5 },
            { duration: '2m', target: 10 },
            { duration: '2m', target: 15 },
          ],
        },
      },
      thresholds: {
        http_req_failed: ['rate<0.01'],
        http_req_duration: ['p(95)<800'],
      },
    };

    const URL = `${__ENV.INFER_URL}`;
    const headers = { 'Content-Type': 'application/json' };
    const candidates = [
      "this is great", "this is awful", "i love it", "i hate this",
      "fantastic work", "terrible idea", "pretty good", "not good",
    ];

    export default function () {
      const payload = JSON.stringify({
        inputs: [
          candidates[Math.floor(Math.random() * candidates.length)],
          candidates[Math.floor(Math.random() * candidates.length)],
        ],
      });

      const res = http.post(URL, payload, { headers });
      check(res, {
        'status is 200': (r) => r.status === 200,
        'looks like json': (r) => r.headers['Content-Type']?.includes('application/json'),
      });

      sleep(0.01);
    }
